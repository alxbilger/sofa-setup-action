# Action description and parameters
name: 'SOFA Setup Action'
description: 'Setup everything needed to build a SOFA plugin'
inputs:
  sofa_root:  # id of input
    description: 'SOFA install directory'
    required: true
    default: '/opt/sofa'
  sofa_version: # id of input
    description: 'Major version of SOFA to install'
    required: true
    default: 'v21.06'
outputs:
  sofa_root:
    description: "SOFA root directory"
    value: ${{ inputs.sofa_root }}
  sofa_version:
    description: "SOFA version"
    value: ${{ inputs.sofa_version }}
  python_version:
    description: "Python version installed for SOFA"
    value: ${{ steps.set-env-vars.outputs.python_version }}
  pybind11_version:
    description: "Pybind11 version installed for SOFA"
    value: ${{ steps.set-env-vars.outputs.pybind11_version }}

# Action code
runs:
  using: "composite"
  steps:
    - name: Set env vars
      id: set-env-vars
      shell: bash
      run: |
        echo github.event.number = ${{ github.event.number  }}
        echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
        echo github.event.issue.number = ${{ github.event.issue.number }}
        if [ -n "${{ github.event.number }}" ]; then
          GIT_BRANCH="PR-${{ github.event.number }}"
        elif [ -n "${{ github.event.pull_request.number }}" ]; then
          GIT_BRANCH="PR-${{ github.event.pull_request.number }}"
        elif [ -n "${{ github.event.issue.number }}" ]; then
          GIT_BRANCH="PR-${{ github.event.issue.number }}"
        else
          GIT_BRANCH="${GITHUB_REF#refs/heads/}"
        fi
        if [ -z "$GIT_BRANCH" ]; then exit 1; fi
        echo "GIT_BRANCH=$GIT_BRANCH" | tee -a $GITHUB_ENV
        
        SOFA_OS="${RUNNER_OS^}" # set first char to uppercase
        echo "SOFA_OS=$SOFA_OS" | tee -a $GITHUB_ENV
        
        # TODO: find a better way to handle dependency versions
        if [[ "$SOFA_OS" == "Linux" ]]; then
            PYTHON_VERSION=3.8
            PYBIND11_VERSION=2.4.3
        elif [[ "$SOFA_OS" == "MacOS" ]]; then
            PYTHON_VERSION=3.9
            PYBIND11_VERSION=2.4.3
        fi
        echo "PYTHON_VERSION=$PYTHON_VERSION" | tee -a $GITHUB_ENV
        echo "PYBIND11_VERSION=$PYBIND11_VERSION" | tee -a $GITHUB_ENV
        
        echo "::set-output name=python_version::$(echo $PYTHON_VERSION)"
        echo "::set-output name=pybind11_version::$(echo $PYBIND11_VERSION)"
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install requirements
      run: |
        if [[ "$SOFA_OS" == "Linux" ]]; then
            sudo apt install -qq libeigen3-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev
            sudo apt install -qq ccache ninja-build
            python3 -m pip install numpy scipy
        elif [[ "$SOFA_OS" == "MacOS" ]]; then
            brew install eigen boost
            brew install ccache ninja
            brew list | grep python | while read package; do
              brew unlink $package
            done
            python3 -m pip install numpy scipy
        fi
    
    - name: Build and install pybind11
      run: |
        git clone -b v${PYBIND11_VERSION} --depth 1 https://github.com/pybind/pybind11.git /tmp/pybind11
        cd /tmp/pybind11
        cmake -DCMAKE_BUILD_TYPE=Release -DPYBIND11_TEST=OFF -DPYTHON_EXECUTABLE=$(which python${{ env.PYTHON_VERSION }}) .
        sudo make --silent install
    
    - name: Download and install the latest SOFA ${{ inputs.sofa_version }} binaries
      shell: bash
      run: |
        mkdir -p /tmp/sofa_zip
        mkdir -p /tmp/sofa_binaries
        curl --output /tmp/sofa_zip/${SOFA_OS}.zip -L \
          https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries/CI_BRANCH=${{ inputs.sofa_version }},CI_SCOPE=minimal/lastSuccessfulBuild/artifact/${SOFA_OS}/*zip*/${SOFA_OS}.zip
        unzip -qq /tmp/sofa_zip/${SOFA_OS}.zip -d /tmp/sofa_zip
        unzip -qq /tmp/sofa_zip/${SOFA_OS}/SOFA_*.zip -d /tmp/sofa_binaries
        sudo mv /tmp/sofa_binaries/SOFA_* ${{ inputs.sofa_root }}
        sudo ls -la ${{ inputs.sofa_root }}
        rm -rf /tmp/sofa_*
